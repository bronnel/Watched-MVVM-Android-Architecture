def Group(Closure closure) {
    closure.delegate = dependencies
    return closure
}

ext {

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // LIBRARIES                                                                                  //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    libs = Group {
        api depends.libs
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // KOTLIN                                                                                     //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    kotlin = Group {
        api depends.kotlin.lib
        api depends.kotlin.ktx
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // ANDROID                                                                                    //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    android = Group {
        api depends.android.compat
        api depends.android.v4
        api depends.android.v7
        api depends.android.recyclerView
        api depends.android.design
        api depends.android.constraintLayout
    }
    
    ////////////////////////////////////////////////////////////////////////////////////////////////
    // DAGGER                                                                                      //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    dagger = Group {
        api depends.dagger.dagger
        kapt depends.dagger.compiler
        api depends.dagger.android
        api depends.dagger.support
        kapt depends.dagger.processor
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // ARCHITECTURE COMPONENTS                                                                    //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    architecture = Group {
        api depends.architecture.viewModel
        api depends.architecture.liveData
        api depends.architecture.extensions
        api depends.architecture.streams
        kapt depends.architecture.compiler
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // NETWORKING                                                                                 //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    networking = Group {
        api depends.okHttp.okHttp
        api depends.okHttp.logging

        api depends.retrofit.retrofit
        api depends.retrofit.rx
        api depends.retrofit.gson
        api depends.retrofit.scalars
        api depends.retrofit.adapter
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // RX                                                                                         //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    rx = Group {
        api depends.rx.android
        api depends.rx.java
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // IMAGE                                                                                      //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    glide = Group {
        api depends.glide.api
        kapt depends.glide.compiler
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // PARCELER                                                                                   //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    parceler = Group {
        api depends.parceler.api
        kapt depends.parceler.compiler
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // ANNOTATION PROCESSOR                                                                      //
    ////////////////////////////////////////////////////////////////////////////////////////////////

    annotationProcessor = Group {
        kapt depends.dagger.compiler
        kapt depends.dagger.processor
        kapt depends.architecture.compiler
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // TESTING                                                                                    //
    ////////////////////////////////////////////////////////////////////////////////////////////////
    
    // TODO
}